{
  "version": 3,
  "sources": ["../../@material-ui/core/esm/FormControlLabel/FormControlLabel.js", "../../@material-ui/core/esm/FormControl/FormControl.js", "../../@material-ui/core/esm/InputBase/utils.js", "../../@material-ui/core/esm/utils/isMuiElement.js", "../../@material-ui/core/esm/Typography/Typography.js"],
  "sourcesContent": ["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { isFilled, isAdornedStart } from '../InputBase/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport isMuiElement from '../utils/isMuiElement';\nimport FormControlContext from './FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    flexDirection: 'column',\n    position: 'relative',\n    // Reset fieldset default style.\n    minWidth: 0,\n    padding: 0,\n    margin: 0,\n    border: 0,\n    verticalAlign: 'top' // Fix alignment issue on Safari.\n\n  },\n\n  /* Styles applied to the root element if `margin=\"normal\"`. */\n  marginNormal: {\n    marginTop: 16,\n    marginBottom: 8\n  },\n\n  /* Styles applied to the root element if `margin=\"dense\"`. */\n  marginDense: {\n    marginTop: 8,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the root element if `fullWidth={true}`. */\n  fullWidth: {\n    width: '100%'\n  }\n};\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n *  - FormLabel\n *  - FormHelperText\n *  - Input\n *  - InputLabel\n *\n * You can find one composition example below and more going to [the demos](/components/text-fields/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️Only one input can be used within a FormControl.\n */\n\nvar FormControl = /*#__PURE__*/React.forwardRef(function FormControl(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      visuallyFocused = props.focused,\n      _props$hiddenLabel = props.hiddenLabel,\n      hiddenLabel = _props$hiddenLabel === void 0 ? false : _props$hiddenLabel,\n      _props$margin = props.margin,\n      margin = _props$margin === void 0 ? 'none' : _props$margin,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      size = props.size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"fullWidth\", \"focused\", \"hiddenLabel\", \"margin\", \"required\", \"size\", \"variant\"]);\n\n  var _React$useState = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialAdornedStart = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        var input = isMuiElement(child, ['Select']) ? child.props.input : child;\n\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n\n    return initialAdornedStart;\n  }),\n      adornedStart = _React$useState[0],\n      setAdornedStart = _React$useState[1];\n\n  var _React$useState2 = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialFilled = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        if (isFilled(child.props, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n\n    return initialFilled;\n  }),\n      filled = _React$useState2[0],\n      setFilled = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _focused = _React$useState3[0],\n      setFocused = _React$useState3[1];\n\n  var focused = visuallyFocused !== undefined ? visuallyFocused : _focused;\n\n  if (disabled && focused) {\n    setFocused(false);\n  }\n\n  var registerEffect;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var registeredInput = React.useRef(false);\n\n    registerEffect = function registerEffect() {\n      if (registeredInput.current) {\n        console.error(['Material-UI: There are multiple InputBase components inside a FormControl.', 'This is not supported. It might cause infinite rendering loops.', 'Only use one InputBase.'].join('\\n'));\n      }\n\n      registeredInput.current = true;\n      return function () {\n        registeredInput.current = false;\n      };\n    };\n  }\n\n  var onFilled = React.useCallback(function () {\n    setFilled(true);\n  }, []);\n  var onEmpty = React.useCallback(function () {\n    setFilled(false);\n  }, []);\n  var childContext = {\n    adornedStart: adornedStart,\n    setAdornedStart: setAdornedStart,\n    color: color,\n    disabled: disabled,\n    error: error,\n    filled: filled,\n    focused: focused,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    margin: (size === 'small' ? 'dense' : undefined) || margin,\n    onBlur: function onBlur() {\n      setFocused(false);\n    },\n    onEmpty: onEmpty,\n    onFilled: onFilled,\n    onFocus: function onFocus() {\n      setFocused(true);\n    },\n    registerEffect: registerEffect,\n    required: required,\n    variant: variant\n  };\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: childContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, margin !== 'none' && classes[\"margin\".concat(capitalize(margin))], fullWidth && classes.fullWidth),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControl.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The contents of the form control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the component will be displayed in focused state.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `true`, the component will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be hidden.\n   * This is used to increase density for a `FilledInput`.\n   * Be sure to add `aria-label` to the `input` element.\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * If `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the text field.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControl'\n})(FormControl);", "// Supports determination of isControlled().\n// Controlled input accepts its current value as a prop.\n//\n// @see https://facebook.github.io/react/docs/forms.html#controlled-components\n// @param value\n// @returns {boolean} true if string (including '') or number (including zero)\nexport function hasValue(value) {\n  return value != null && !(Array.isArray(value) && value.length === 0);\n} // Determine if field is empty or filled.\n// Response determines if label is presented above field or as placeholder.\n//\n// @param obj\n// @param SSR\n// @returns {boolean} False when not present or empty string.\n//                    True when any number or string with length.\n\nexport function isFilled(obj) {\n  var SSR = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return obj && (hasValue(obj.value) && obj.value !== '' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== '');\n} // Determine if an Input is adorned on start.\n// It's corresponding to the left with LTR.\n//\n// @param obj\n// @returns {boolean} False when no adornments.\n//                    True when adorned at the start.\n\nexport function isAdornedStart(obj) {\n  return obj.startAdornment;\n}", "import * as React from 'react';\nexport default function isMuiElement(element, muiNames) {\n  return /*#__PURE__*/React.isValidElement(element) && muiNames.indexOf(element.type.muiName) !== -1;\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);"],
  "mappings": "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",
  "names": ["React", "import_prop_types", "React", "FormControl", "registerEffect", "PropTypes", "React", "import_prop_types", "styles", "Typography", "PropTypes", "styles", "FormControlLabel", "PropTypes"]
}
